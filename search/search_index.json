{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 Task 1: Theoretical Foundation 1.1 Equations of Motion for Projectile Motion The governing equations of motion for a projectile are derived from the basic principles of physics: Newton's Laws of Motion and the equations of constant acceleration . We will assume there is no air resistance in this idealized scenario. Horizontal Motion: \\[ x(t) = v_0 \\cdot \\cos(\\theta) \\cdot t \\] where: - \\(x(t)\\) is the horizontal position at time \\(t\\) , - \\(v_0\\) is the initial velocity, - \\(\\theta\\) is the angle of projection, - \\(t\\) is the time. Vertical Motion: \\[ y(t) = v_0 \\cdot \\sin(\\theta) \\cdot t - \\frac{1}{2} g t^2 \\] where: - \\(y(t)\\) is the vertical position at time \\(t\\) , - \\(g\\) is the acceleration due to gravity ( \\(9.81 \\, \\text{m/s}^2\\) ). These two equations describe the horizontal and vertical positions of the projectile at any given time \\(t\\) . 1.2 Time of Flight The time of flight is the total time the projectile remains in the air before it hits the ground. To find this, we set the vertical position equal to zero at the time of impact: \\[ y(t_f) = 0 \\] Substitute the vertical motion equation: \\[ v_0 \\sin(\\theta) \\cdot t_f - \\frac{1}{2} g t_f^2 = 0 \\] Factoring out \\(t_f\\) : \\[ t_f \\left( v_0 \\sin(\\theta) - \\frac{1}{2} g t_f \\right) = 0 \\] Solving for \\(t_f\\) (ignoring the trivial solution \\(t_f = 0\\) ): \\[ t_f = \\frac{2 v_0 \\sin(\\theta)}{g} \\] Thus, the time of flight depends on the initial velocity \\(v_0\\) and the angle of projection \\(\\theta\\) . 1.3 Range of the Projectile The range \\(R\\) is the horizontal distance the projectile travels before hitting the ground. It is given by the horizontal motion equation at the time of flight \\(t_f\\) : \\[ R = x(t_f) = v_0 \\cdot \\cos(\\theta) \\cdot t_f \\] Substitute the time of flight \\(t_f = \\frac{2 v_0 \\sin(\\theta)}{g}\\) into the equation for range: \\[ R = v_0 \\cdot \\cos(\\theta) \\cdot \\frac{2 v_0 \\sin(\\theta)}{g} \\] Simplifying: \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] This is the formula for the range of a projectile. 1.4 Family of Solutions Based on Initial Conditions The range \\(R\\) depends on two variables: the initial velocity \\(v_0\\) and the angle of projection \\(\\theta\\) . Effect of Initial Velocity \\(v_0\\) : A higher initial velocity increases the range. Effect of Angle of Projection \\(\\theta\\) : The range \\(R\\) is a function of \\(\\sin(2\\theta)\\) . Therefore, the range will be maximized when \\(\\theta = 45^\\circ\\) , since \\(\\sin(90^\\circ) = 1\\) . By varying the initial velocity or launch angle, we obtain a family of solutions describing the projectile's behavior. Task 2: Analysis of the Range Investigating the Dependence of Range on Angle of Projection The horizontal range \\(R\\) of a projectile launched with an initial velocity \\(v_0\\) at an angle \\(\\theta\\) is given by the standard kinematic equation: \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] where: - \\(v_0\\) is the initial velocity, - \\(\\theta\\) is the angle of projection, - \\(g\\) is the acceleration due to gravity. Key Observations: Effect of Angle ( \\(\\theta\\) ): The range is maximized when \\(\\sin(2\\theta) = 1\\) , which occurs at \\(\\theta = 45^\\circ\\) . For angles greater or smaller than \\(45^\\circ\\) , the range decreases symmetrically. Effect of Initial Velocity ( \\(v_0\\) ): Since \\(R \\propto v_0^2\\) , doubling the initial velocity results in a fourfold increase in range. Effect of Gravitational Acceleration ( \\(g\\) ): The range is inversely proportional to \\(g\\) , meaning a lower gravitational field (such as on the Moon) results in a longer range, while a higher gravitational field (such as on Jupiter) results in a shorter range. Influence of Other Parameters Air Resistance: The idealized equation assumes no air resistance. In reality, drag reduces the range, and the optimal angle shifts slightly below \\(45^\\circ\\) . Altitude Variations: Changes in \\(g\\) due to altitude can affect the range. Wind Effects: A tailwind increases range, while a headwind decreases it. Task 3 : Practical Applications of Projectile Motion Adapting the Model for Real-World Scenarios The idealized model of projectile motion assumes uniform gravitational acceleration, no air resistance, and a flat launch and landing surface. However, real-world scenarios often involve additional complexities. Below are some practical applications and modifications of the model: 1. Projectiles on Uneven Terrain In mountainous or hilly regions, the launch and landing points may be at different elevations. The range equation must be modified to account for varying heights using the kinematic equation: $$ y = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 $$ where \\(y\\) represents the vertical displacement. - Adjustments are made by solving for the total flight time considering different initial and final heights. 2. Air Resistance and Drag Effects In practical cases, air resistance significantly affects projectile motion, reducing the range. The motion can be modeled using drag force \\(F_d\\) : $$ F_d = \\frac{1}{2} C_d \\rho A v^2 $$ where: - \\(C_d\\) is the drag coefficient, - \\(\\rho\\) is air density, - \\(A\\) is the cross-sectional area, - \\(v\\) is the velocity. - Numerical simulations are used to approximate projectile trajectories under these conditions. 3. Sports and Ballistics Applications Sports (Football, Basketball, Golf, etc.): Air resistance and spin play crucial roles. The Magnus effect explains curving trajectories due to spin. Military and Space Applications: Artillery and missile trajectories account for drag, wind, and Coriolis force due to Earth's rotation. Rocket Launches: Rockets experience varying gravitational fields and atmospheric densities, requiring advanced modeling. Task 4 : Implementation import numpy as np import matplotlib.pyplot as plt Constants g = 9.81 # Acceleration due to gravity (m/s^2) Function to calculate the range of a projectile def calculate_range(angle_deg, v0, g): angle_rad = np.radians(angle_deg) # Convert angle to radians return (v0**2 * np.sin(2 * angle_rad)) / g Function to simulate and plot range vs angle for different initial velocities def simulate_projectile_motion(initial_velocities): angles = np.linspace(0, 90, 100) # Angles from 0\u00b0 to 90\u00b0 plt.figure(figsize=(10, 6)) for v0 in initial_velocities: ranges = [calculate_range(angle, v0, g) for angle in angles] plt.plot(angles, ranges, label=f\"v0 = {v0} m/s\") plt.title(\"Range of a Projectile as a Function of Angle of Projection\") plt.xlabel(\"Angle of Projection (degrees)\") plt.ylabel(\"Range (meters)\") plt.grid(True) plt.legend() plt.show() Initial velocities to test initial_velocities = [20, 40, 60, 80] # Different initial velocities (m/s)","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#task-1-theoretical-foundation","text":"","title":"Task 1: Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#11-equations-of-motion-for-projectile-motion","text":"The governing equations of motion for a projectile are derived from the basic principles of physics: Newton's Laws of Motion and the equations of constant acceleration . We will assume there is no air resistance in this idealized scenario.","title":"1.1 Equations of Motion for Projectile Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#horizontal-motion","text":"\\[ x(t) = v_0 \\cdot \\cos(\\theta) \\cdot t \\] where: - \\(x(t)\\) is the horizontal position at time \\(t\\) , - \\(v_0\\) is the initial velocity, - \\(\\theta\\) is the angle of projection, - \\(t\\) is the time.","title":"Horizontal Motion:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#vertical-motion","text":"\\[ y(t) = v_0 \\cdot \\sin(\\theta) \\cdot t - \\frac{1}{2} g t^2 \\] where: - \\(y(t)\\) is the vertical position at time \\(t\\) , - \\(g\\) is the acceleration due to gravity ( \\(9.81 \\, \\text{m/s}^2\\) ). These two equations describe the horizontal and vertical positions of the projectile at any given time \\(t\\) .","title":"Vertical Motion:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#12-time-of-flight","text":"The time of flight is the total time the projectile remains in the air before it hits the ground. To find this, we set the vertical position equal to zero at the time of impact: \\[ y(t_f) = 0 \\] Substitute the vertical motion equation: \\[ v_0 \\sin(\\theta) \\cdot t_f - \\frac{1}{2} g t_f^2 = 0 \\] Factoring out \\(t_f\\) : \\[ t_f \\left( v_0 \\sin(\\theta) - \\frac{1}{2} g t_f \\right) = 0 \\] Solving for \\(t_f\\) (ignoring the trivial solution \\(t_f = 0\\) ): \\[ t_f = \\frac{2 v_0 \\sin(\\theta)}{g} \\] Thus, the time of flight depends on the initial velocity \\(v_0\\) and the angle of projection \\(\\theta\\) .","title":"1.2 Time of Flight"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#13-range-of-the-projectile","text":"The range \\(R\\) is the horizontal distance the projectile travels before hitting the ground. It is given by the horizontal motion equation at the time of flight \\(t_f\\) : \\[ R = x(t_f) = v_0 \\cdot \\cos(\\theta) \\cdot t_f \\] Substitute the time of flight \\(t_f = \\frac{2 v_0 \\sin(\\theta)}{g}\\) into the equation for range: \\[ R = v_0 \\cdot \\cos(\\theta) \\cdot \\frac{2 v_0 \\sin(\\theta)}{g} \\] Simplifying: \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] This is the formula for the range of a projectile.","title":"1.3 Range of the Projectile"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#14-family-of-solutions-based-on-initial-conditions","text":"The range \\(R\\) depends on two variables: the initial velocity \\(v_0\\) and the angle of projection \\(\\theta\\) . Effect of Initial Velocity \\(v_0\\) : A higher initial velocity increases the range. Effect of Angle of Projection \\(\\theta\\) : The range \\(R\\) is a function of \\(\\sin(2\\theta)\\) . Therefore, the range will be maximized when \\(\\theta = 45^\\circ\\) , since \\(\\sin(90^\\circ) = 1\\) . By varying the initial velocity or launch angle, we obtain a family of solutions describing the projectile's behavior.","title":"1.4 Family of Solutions Based on Initial Conditions"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#task-2-analysis-of-the-range","text":"","title":"Task 2: Analysis of the Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#investigating-the-dependence-of-range-on-angle-of-projection","text":"The horizontal range \\(R\\) of a projectile launched with an initial velocity \\(v_0\\) at an angle \\(\\theta\\) is given by the standard kinematic equation: \\[ R = \\frac{v_0^2 \\sin(2\\theta)}{g} \\] where: - \\(v_0\\) is the initial velocity, - \\(\\theta\\) is the angle of projection, - \\(g\\) is the acceleration due to gravity.","title":"Investigating the Dependence of Range on Angle of Projection"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#key-observations","text":"Effect of Angle ( \\(\\theta\\) ): The range is maximized when \\(\\sin(2\\theta) = 1\\) , which occurs at \\(\\theta = 45^\\circ\\) . For angles greater or smaller than \\(45^\\circ\\) , the range decreases symmetrically. Effect of Initial Velocity ( \\(v_0\\) ): Since \\(R \\propto v_0^2\\) , doubling the initial velocity results in a fourfold increase in range. Effect of Gravitational Acceleration ( \\(g\\) ): The range is inversely proportional to \\(g\\) , meaning a lower gravitational field (such as on the Moon) results in a longer range, while a higher gravitational field (such as on Jupiter) results in a shorter range.","title":"Key Observations:"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#influence-of-other-parameters","text":"Air Resistance: The idealized equation assumes no air resistance. In reality, drag reduces the range, and the optimal angle shifts slightly below \\(45^\\circ\\) . Altitude Variations: Changes in \\(g\\) due to altitude can affect the range. Wind Effects: A tailwind increases range, while a headwind decreases it.","title":"Influence of Other Parameters"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#task-3-practical-applications-of-projectile-motion","text":"","title":"Task 3 : Practical Applications of Projectile Motion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#adapting-the-model-for-real-world-scenarios","text":"The idealized model of projectile motion assumes uniform gravitational acceleration, no air resistance, and a flat launch and landing surface. However, real-world scenarios often involve additional complexities. Below are some practical applications and modifications of the model:","title":"Adapting the Model for Real-World Scenarios"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-projectiles-on-uneven-terrain","text":"In mountainous or hilly regions, the launch and landing points may be at different elevations. The range equation must be modified to account for varying heights using the kinematic equation: $$ y = v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 $$ where \\(y\\) represents the vertical displacement. - Adjustments are made by solving for the total flight time considering different initial and final heights.","title":"1. Projectiles on Uneven Terrain"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-air-resistance-and-drag-effects","text":"In practical cases, air resistance significantly affects projectile motion, reducing the range. The motion can be modeled using drag force \\(F_d\\) : $$ F_d = \\frac{1}{2} C_d \\rho A v^2 $$ where: - \\(C_d\\) is the drag coefficient, - \\(\\rho\\) is air density, - \\(A\\) is the cross-sectional area, - \\(v\\) is the velocity. - Numerical simulations are used to approximate projectile trajectories under these conditions.","title":"2. Air Resistance and Drag Effects"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-sports-and-ballistics-applications","text":"Sports (Football, Basketball, Golf, etc.): Air resistance and spin play crucial roles. The Magnus effect explains curving trajectories due to spin. Military and Space Applications: Artillery and missile trajectories account for drag, wind, and Coriolis force due to Earth's rotation. Rocket Launches: Rockets experience varying gravitational fields and atmospheric densities, requiring advanced modeling.","title":"3. Sports and Ballistics Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#task-4-implementation","text":"import numpy as np import matplotlib.pyplot as plt","title":"Task 4 : Implementation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#constants","text":"g = 9.81 # Acceleration due to gravity (m/s^2)","title":"Constants"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#function-to-calculate-the-range-of-a-projectile","text":"def calculate_range(angle_deg, v0, g): angle_rad = np.radians(angle_deg) # Convert angle to radians return (v0**2 * np.sin(2 * angle_rad)) / g","title":"Function to calculate the range of a projectile"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#function-to-simulate-and-plot-range-vs-angle-for-different-initial-velocities","text":"def simulate_projectile_motion(initial_velocities): angles = np.linspace(0, 90, 100) # Angles from 0\u00b0 to 90\u00b0 plt.figure(figsize=(10, 6)) for v0 in initial_velocities: ranges = [calculate_range(angle, v0, g) for angle in angles] plt.plot(angles, ranges, label=f\"v0 = {v0} m/s\") plt.title(\"Range of a Projectile as a Function of Angle of Projection\") plt.xlabel(\"Angle of Projection (degrees)\") plt.ylabel(\"Range (meters)\") plt.grid(True) plt.legend() plt.show()","title":"Function to simulate and plot range vs angle for different initial velocities"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#initial-velocities-to-test","text":"initial_velocities = [20, 40, 60, 80] # Different initial velocities (m/s)","title":"Initial velocities to test"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2 Task 1: Theoretical Foundation: Forced Damped Pendulum Governing Equation The motion of a forced damped pendulum is governed by the following second-order nonlinear differential equation: \\[ \\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\frac{g}{L} \\sin\\theta = A\\cos(\\omega t) \\] where: - \\(\\theta\\) is the angular displacement, - \\(b\\) is the damping coefficient, - \\(g\\) is the acceleration due to gravity, - \\(L\\) is the length of the pendulum, - \\(A\\) is the amplitude of the external driving force, - \\(\\omega\\) is the driving frequency, - \\(t\\) is time. Small-Angle Approximation For small angles, we use the approximation: \\[ \\sin\\theta \\approx \\theta \\] Substituting this into the equation simplifies it to: \\[ \\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\frac{g}{L} \\theta = A\\cos(\\omega t) \\] This is a linear, non-homogeneous differential equation, which can be solved using the method of undetermined coefficients or by considering the system's natural and forced response. General Solution The solution consists of two parts: Homogeneous solution (solution to the undriven equation): $$ \\theta_h(t) = C_1 e^{r_1 t} + C_2 e^{r_2 t} $$ where \\(r_1\\) and \\(r_2\\) are the roots of the characteristic equation: $$ r^2 + br + \\frac{g}{L} = 0 $$ Particular solution (steady-state response due to the driving force): $$ \\theta_p(t) = \\Theta_0 \\cos(\\omega t - \\delta) $$ where \\(\\Theta_0\\) is the amplitude of oscillation, and \\(\\delta\\) is the phase shift. The full solution is: \\[ \\theta(t) = C_1 e^{r_1 t} + C_2 e^{r_2 t} + \\Theta_0 \\cos(\\omega t - \\delta) \\] For long times ( \\(t \\to \\infty\\) ), the transient terms ( \\(C_1 e^{r_1 t} + C_2 e^{r_2 t}\\) ) vanish due to damping, leaving only the steady-state oscillation. Resonance Condition Resonance occurs when the driving frequency \\(\\omega\\) matches the system's natural frequency: \\[ \\omega_0 = \\sqrt{\\frac{g}{L}} \\] At resonance, the amplitude \\(\\Theta_0\\) of oscillations reaches a maximum: \\[ \\Theta_0 = \\frac{A}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (b\\omega)^2}} \\] As damping ( \\(b\\) ) decreases, the resonance peak becomes sharper, meaning the system absorbs more energy from the driving force. Implications of Resonance At resonance, the pendulum oscillates with large amplitude, potentially leading to chaotic motion for large angles. In real systems, excessive oscillations may lead to structural failure (e.g., bridges, buildings). Similar behavior is seen in electrical RLC circuits, where resonance maximizes current. Task 3 : Practical Applications of the Forced Damped Pendulum The forced damped pendulum serves as a model for various real-world systems where periodic forces interact with damping and restoring forces. 1. Energy Harvesting Devices Used in vibration-based energy harvesters , where mechanical motion is converted into electrical energy. Examples: Piezoelectric and electromagnetic harvesters in smart sensors. 2. Suspension Bridges Large structures like the Tacoma Narrows Bridge exhibit forced oscillations due to wind forces. Understanding resonance helps in designing damping mechanisms to prevent catastrophic failures. 3. Oscillating Circuits Electrical RLC circuits with alternating current behave analogously to the pendulum. The driving force corresponds to an AC voltage, damping is due to resistance, and inductance plays the role of inertia. 4. Clocks and Timekeeping Pendulum clocks rely on periodic motion but require controlled damping to maintain accuracy. External forcing (e.g., escapement mechanism) ensures consistent oscillations. 5. Human Movement & Biomechanics Gait dynamics in walking and running exhibit forced oscillatory behavior. Studying these dynamics helps in prosthetic design and rehabilitation. Task 4 : Implementation: Simulating the Forced Damped Pendulum To understand the complex behavior of the forced damped pendulum, we implement a computational model using Python. This model solves the equation of motion numerically and visualizes key dynamical features. 1. Governing Equation The equation describing the motion is: \\[ \\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\frac{g}{L} \\sin\\theta = A\\cos(\\omega t) \\] Rewriting as a system of first-order differential equations: \\[ \\frac{d\\theta}{dt} = \\omega \\] \\[ \\frac{d\\omega}{dt} = -b\\omega - \\frac{g}{L} \\sin\\theta + A\\cos(\\Omega t) \\] where: - \\(\\theta\\) is the angular displacement, - \\(\\omega\\) is the angular velocity, - \\(b\\) is the damping coefficient, - \\(A\\) is the driving amplitude, - \\(\\Omega\\) is the driving frequency. 2. Numerical Simulation We use the fourth-order Runge-Kutta (RK4) method to solve these equations. This approach ensures accurate integration of nonlinear dynamics. Python Implementation ```python import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp Parameters g, L = 9.81, 1.0 # Gravity and pendulum length b = 0.2 # Damping coefficient A = 1.2 # Driving amplitude Omega = 2.0 # Driving frequency theta0, omega0 = 0.2, 0.0 # Initial conditions t_max, dt = 100, 0.01 # Simulation time Equations of motion def pendulum(t, y): theta, omega = y dtheta_dt = omega domega_dt = -b * omega - (g / L) * np.sin(theta) + A * np.cos(Omega * t) return [dtheta_dt, domega_dt] Solve system t_span = (0, t_max) t_eval = np.arange(0, t_max, dt) sol = solve_ivp(pendulum, t_span, [theta0, omega0], t_eval=t_eval, method='RK45') Extract results theta, omega = sol.y t = sol.t Plot time evolution plt.figure(figsize=(10, 4)) plt.plot(t, theta, label=r' \\(\\theta(t)\\) ') plt.xlabel('Time') plt.ylabel('Angular Displacement') plt.title('Time Evolution of the Forced Damped Pendulum') plt.legend() plt.grid() plt.show()","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#task-1-theoretical-foundation-forced-damped-pendulum","text":"","title":"Task 1: Theoretical Foundation: Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#governing-equation","text":"The motion of a forced damped pendulum is governed by the following second-order nonlinear differential equation: \\[ \\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\frac{g}{L} \\sin\\theta = A\\cos(\\omega t) \\] where: - \\(\\theta\\) is the angular displacement, - \\(b\\) is the damping coefficient, - \\(g\\) is the acceleration due to gravity, - \\(L\\) is the length of the pendulum, - \\(A\\) is the amplitude of the external driving force, - \\(\\omega\\) is the driving frequency, - \\(t\\) is time.","title":"Governing Equation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#small-angle-approximation","text":"For small angles, we use the approximation: \\[ \\sin\\theta \\approx \\theta \\] Substituting this into the equation simplifies it to: \\[ \\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\frac{g}{L} \\theta = A\\cos(\\omega t) \\] This is a linear, non-homogeneous differential equation, which can be solved using the method of undetermined coefficients or by considering the system's natural and forced response.","title":"Small-Angle Approximation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#general-solution","text":"The solution consists of two parts: Homogeneous solution (solution to the undriven equation): $$ \\theta_h(t) = C_1 e^{r_1 t} + C_2 e^{r_2 t} $$ where \\(r_1\\) and \\(r_2\\) are the roots of the characteristic equation: $$ r^2 + br + \\frac{g}{L} = 0 $$ Particular solution (steady-state response due to the driving force): $$ \\theta_p(t) = \\Theta_0 \\cos(\\omega t - \\delta) $$ where \\(\\Theta_0\\) is the amplitude of oscillation, and \\(\\delta\\) is the phase shift. The full solution is: \\[ \\theta(t) = C_1 e^{r_1 t} + C_2 e^{r_2 t} + \\Theta_0 \\cos(\\omega t - \\delta) \\] For long times ( \\(t \\to \\infty\\) ), the transient terms ( \\(C_1 e^{r_1 t} + C_2 e^{r_2 t}\\) ) vanish due to damping, leaving only the steady-state oscillation.","title":"General Solution"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#resonance-condition","text":"Resonance occurs when the driving frequency \\(\\omega\\) matches the system's natural frequency: \\[ \\omega_0 = \\sqrt{\\frac{g}{L}} \\] At resonance, the amplitude \\(\\Theta_0\\) of oscillations reaches a maximum: \\[ \\Theta_0 = \\frac{A}{\\sqrt{(\\omega_0^2 - \\omega^2)^2 + (b\\omega)^2}} \\] As damping ( \\(b\\) ) decreases, the resonance peak becomes sharper, meaning the system absorbs more energy from the driving force.","title":"Resonance Condition"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#implications-of-resonance","text":"At resonance, the pendulum oscillates with large amplitude, potentially leading to chaotic motion for large angles. In real systems, excessive oscillations may lead to structural failure (e.g., bridges, buildings). Similar behavior is seen in electrical RLC circuits, where resonance maximizes current.","title":"Implications of Resonance"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#task-3-practical-applications-of-the-forced-damped-pendulum","text":"The forced damped pendulum serves as a model for various real-world systems where periodic forces interact with damping and restoring forces.","title":"Task 3 : Practical Applications of the Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-energy-harvesting-devices","text":"Used in vibration-based energy harvesters , where mechanical motion is converted into electrical energy. Examples: Piezoelectric and electromagnetic harvesters in smart sensors.","title":"1. Energy Harvesting Devices"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-suspension-bridges","text":"Large structures like the Tacoma Narrows Bridge exhibit forced oscillations due to wind forces. Understanding resonance helps in designing damping mechanisms to prevent catastrophic failures.","title":"2. Suspension Bridges"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#3-oscillating-circuits","text":"Electrical RLC circuits with alternating current behave analogously to the pendulum. The driving force corresponds to an AC voltage, damping is due to resistance, and inductance plays the role of inertia.","title":"3. Oscillating Circuits"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#4-clocks-and-timekeeping","text":"Pendulum clocks rely on periodic motion but require controlled damping to maintain accuracy. External forcing (e.g., escapement mechanism) ensures consistent oscillations.","title":"4. Clocks and Timekeeping"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#5-human-movement-biomechanics","text":"Gait dynamics in walking and running exhibit forced oscillatory behavior. Studying these dynamics helps in prosthetic design and rehabilitation.","title":"5. Human Movement &amp; Biomechanics"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#task-4-implementation-simulating-the-forced-damped-pendulum","text":"To understand the complex behavior of the forced damped pendulum, we implement a computational model using Python. This model solves the equation of motion numerically and visualizes key dynamical features.","title":"Task 4 : Implementation: Simulating the Forced Damped Pendulum"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#1-governing-equation","text":"The equation describing the motion is: \\[ \\frac{d^2\\theta}{dt^2} + b\\frac{d\\theta}{dt} + \\frac{g}{L} \\sin\\theta = A\\cos(\\omega t) \\] Rewriting as a system of first-order differential equations: \\[ \\frac{d\\theta}{dt} = \\omega \\] \\[ \\frac{d\\omega}{dt} = -b\\omega - \\frac{g}{L} \\sin\\theta + A\\cos(\\Omega t) \\] where: - \\(\\theta\\) is the angular displacement, - \\(\\omega\\) is the angular velocity, - \\(b\\) is the damping coefficient, - \\(A\\) is the driving amplitude, - \\(\\Omega\\) is the driving frequency.","title":"1. Governing Equation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#2-numerical-simulation","text":"We use the fourth-order Runge-Kutta (RK4) method to solve these equations. This approach ensures accurate integration of nonlinear dynamics.","title":"2. Numerical Simulation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#python-implementation","text":"```python import numpy as np import matplotlib.pyplot as plt from scipy.integrate import solve_ivp","title":"Python Implementation"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#parameters","text":"g, L = 9.81, 1.0 # Gravity and pendulum length b = 0.2 # Damping coefficient A = 1.2 # Driving amplitude Omega = 2.0 # Driving frequency theta0, omega0 = 0.2, 0.0 # Initial conditions t_max, dt = 100, 0.01 # Simulation time","title":"Parameters"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#equations-of-motion","text":"def pendulum(t, y): theta, omega = y dtheta_dt = omega domega_dt = -b * omega - (g / L) * np.sin(theta) + A * np.cos(Omega * t) return [dtheta_dt, domega_dt]","title":"Equations of motion"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#solve-system","text":"t_span = (0, t_max) t_eval = np.arange(0, t_max, dt) sol = solve_ivp(pendulum, t_span, [theta0, omega0], t_eval=t_eval, method='RK45')","title":"Solve system"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#extract-results","text":"theta, omega = sol.y t = sol.t","title":"Extract results"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#plot-time-evolution","text":"plt.figure(figsize=(10, 4)) plt.plot(t, theta, label=r' \\(\\theta(t)\\) ') plt.xlabel('Time') plt.ylabel('Angular Displacement') plt.title('Time Evolution of the Forced Damped Pendulum') plt.legend() plt.grid() plt.show()","title":"Plot time evolution"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1 Task 1 : Derivation of Kepler's Third Law for Circular Orbits Kepler's Third Law states that the square of the orbital period \\(T\\) is proportional to the cube of the orbital radius \\(r\\) : \\[ T^2 \\propto r^3 \\] In this section, we derive this relationship using Newton's laws of motion and the law of universal gravitation. 1. Centripetal Force and Gravitational Force For a body in a circular orbit around a much larger mass (e.g., a planet orbiting a star), the centripetal force required to maintain the orbit is provided by the gravitational force : Centripetal Force The centripetal force acting on a body of mass \\(m\\) moving with velocity \\(v\\) in a circular orbit of radius \\(r\\) is: \\[ F_c = \\frac{m v^2}{r} \\] Gravitational Force The gravitational force exerted by a central mass \\(M\\) (e.g., the Sun) on the orbiting body is given by Newton's Law of Gravitation: \\[ F_g = \\frac{G M m}{r^2} \\] where: - \\(G\\) is the universal gravitational constant, - \\(M\\) is the mass of the central body, - \\(m\\) is the mass of the orbiting body, - \\(r\\) is the orbital radius. 2. Equating Forces Since gravity provides the necessary centripetal force, we set \\(F_c = F_g\\) : \\[ \\frac{m v^2}{r} = \\frac{G M m}{r^2} \\] Canceling \\(m\\) from both sides: \\[ \\frac{v^2}{r} = \\frac{G M}{r^2} \\] Multiplying both sides by \\(r\\) : \\[ v^2 = \\frac{G M}{r} \\] 3. Expressing Velocity in Terms of Orbital Period The orbital velocity \\(v\\) is related to the orbital period \\(T\\) by: \\[ v = \\frac{2\\pi r}{T} \\] Substituting this into the equation: \\[ \\left(\\frac{2\\pi r}{T}\\right)^2 = \\frac{G M}{r} \\] Expanding: \\[ \\frac{4\\pi^2 r^2}{T^2} = \\frac{G M}{r} \\] Multiplying both sides by \\(r\\) : \\[ 4\\pi^2 r^3 = G M T^2 \\] 4. Final Form of Kepler's Third Law Rearranging for \\(T^2\\) : \\[ T^2 = \\frac{4\\pi^2}{G M} r^3 \\] This shows that the square of the orbital period \\(T\\) is directly proportional to the cube of the orbital radius \\(r\\) : \\[ T^2 \\propto r^3 \\] This is Kepler's Third Law, which describes the relationship between the orbital period and the radius for objects in circular orbits around a massive central body. Task 2 : Discussion on the Implications of Kepler's Third Law for Astronomy Kepler's Third Law, which relates the square of a planet's orbital period ( \\(T\\) ) to the cube of its orbital radius ( \\(r\\) ), has significant implications in the field of astronomy. This law helps astronomers determine various aspects of planetary systems, such as the masses of planets and the distances between celestial objects. 1. Calculating Planetary Masses Kepler's Third Law can be modified to help calculate the mass of a central body, such as a planet or star, based on the orbital characteristics of its satellite or orbiting object. The modified version of Kepler's Third Law is: \\[ T^2 = \\frac{4 \\pi^2 r^3}{G M} \\] Where: - \\(T\\) is the orbital period, - \\(r\\) is the orbital radius, - \\(G\\) is the gravitational constant, and - \\(M\\) is the mass of the central body. From this equation, the mass of the central body ( \\(M\\) ) can be calculated as: \\[ M = \\frac{4 \\pi^2 r^3}{G T^2} \\] Thus, by knowing the orbital period and radius of an orbiting body (e.g., a moon or satellite), astronomers can calculate the mass of the planet or star it orbits. 2. Determining Distances in Space Kepler\u2019s Third Law also plays a crucial role in determining the distances between celestial bodies. By rearranging the law, astronomers can find the orbital radius of a planet, given the period of its orbit and the mass of the central body: \\[ r^3 = \\frac{G M T^2}{4 \\pi^2} \\] Knowing the orbital period ( \\(T\\) ) and the mass of the central body ( \\(M\\) ), the orbital radius ( \\(r\\) ) can be determined. This is particularly useful for calculating the distances between planets and their stars, or between moons and their planets. Task 3 : Real-World Examples of Kepler's Third Law: The Moon and Planetary Orbits Kepler's Third Law, which describes the relationship between the orbital period and the orbital radius of a body, has real-world applications in understanding the motion of celestial bodies such as the Moon and the planets in the Solar System. 1. The Moon's Orbit Around Earth The Moon orbits the Earth in an almost circular path, and its motion can be described using Kepler\u2019s Third Law. The orbital period of the Moon is approximately 27.3 days, and its average orbital radius is about 384,400 km. Using Kepler's Third Law, we can calculate the mass of the Earth based on the Moon's orbital period and radius. We know the gravitational constant ( \\(G\\) ) and the orbital period ( \\(T\\) ) of the Moon, so we can use the following formula: \\[ M = \\frac{4 \\pi^2 r^3}{G T^2} \\] Where: - \\(r\\) = 384,400 km (orbital radius of the Moon), - \\(T\\) = 27.3 days = 2,358,720 seconds (orbital period of the Moon), - \\(G\\) = \\(6.67430 \\times 10^{-11}\\) m \\(^3\\) kg \\(^{-1}\\) s \\(^{-2}\\) (gravitational constant). Plugging these values into the formula, we get the mass of the Earth. This calculation illustrates how Kepler's Third Law is used to determine the masses of celestial bodies. 2. The Orbits of Planets in the Solar System Kepler's Third Law is also fundamental in understanding the orbits of planets around the Sun. For example, the orbital period of Earth is about 365.25 days, and the average distance from Earth to the Sun is about 149.6 million kilometers (1 AU). Using Kepler\u2019s Third Law, we can compare the orbital characteristics of different planets in the Solar System. For example, the orbital period of Jupiter is 11.86 Earth years, and its average distance from the Sun is about 778.3 million kilometers. If we use Kepler\u2019s Third Law to compare the orbital periods and radii of Earth and Jupiter, we can predict the orbital behavior of these planets based on their distances from the Sun. The formula for Kepler\u2019s Third Law in this case is: \\[ \\frac{T_1^2}{r_1^3} = \\frac{T_2^2}{r_2^3} \\] Where: - \\(T_1\\) and \\(r_1\\) are the orbital period and radius of Earth, - \\(T_2\\) and \\(r_2\\) are the orbital period and radius of Jupiter. By substituting the known values for Earth and Jupiter, we can verify that Kepler's Third Law holds true across the Solar System and makes it possible to compare the motion of planets. Task 4 : Implementing a Computational Model to Simulate Circular Orbits In this task, we will implement a computational model to simulate circular orbits and verify the relationship between the orbital period and the orbital radius, as described by Kepler's Third Law. We will write a Python script to simulate the motion of a satellite orbiting a central body and calculate its orbital period based on its radius. 1. Kepler's Third Law and Circular Orbits Kepler's Third Law states that: \\[ T^2 = \\frac{4 \\pi^2 r^3}{G M} \\] Where: - \\(T\\) is the orbital period, - \\(r\\) is the orbital radius, - \\(G\\) is the gravitational constant, and - \\(M\\) is the mass of the central body. For circular orbits, we will simulate the motion of a satellite and calculate the orbital period for various orbital radii, using the above law. We can then compare the computed periods to the theoretical values to verify the relationship. 2. Python Script to Simulate Circular Orbits Below is a Python script that simulates circular orbits for different orbital radii and calculates the orbital period based on Kepler's Third Law. ```python import numpy as np import matplotlib.pyplot as plt Constants G = 6.67430e-11 # Gravitational constant (m^3 kg^-1 s^-2) M = 5.972e24 # Mass of Earth (kg) pi = np.pi Function to calculate orbital period using Kepler's Third Law def orbital_period(r): T = 2 * pi * np.sqrt(r**3 / (G * M)) # Orbital period (seconds) return T Range of orbital radii (in meters) radii = np.linspace(1e6, 1e8, 100) # From 1,000 km to 100,000 km Calculate the orbital periods for each radius periods = orbital_period(radii) Convert orbital period from seconds to days periods_days = periods / (60 * 60 * 24) Plot the relationship between orbital period and orbital radius plt.figure(figsize=(8, 6)) plt.plot(radii, periods_days, label='Orbital Period', color='b') plt.xlabel('Orbital Radius (m)') plt.ylabel('Orbital Period (days)') plt.title('Orbital Period vs Orbital Radius') plt.grid(True) plt.legend() plt.show()","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#task-1-derivation-of-keplers-third-law-for-circular-orbits","text":"Kepler's Third Law states that the square of the orbital period \\(T\\) is proportional to the cube of the orbital radius \\(r\\) : \\[ T^2 \\propto r^3 \\] In this section, we derive this relationship using Newton's laws of motion and the law of universal gravitation.","title":"Task 1 : Derivation of Kepler's Third Law for Circular Orbits"},{"location":"1%20Physics/2%20Gravity/Problem_1/#1-centripetal-force-and-gravitational-force","text":"For a body in a circular orbit around a much larger mass (e.g., a planet orbiting a star), the centripetal force required to maintain the orbit is provided by the gravitational force :","title":"1. Centripetal Force and Gravitational Force"},{"location":"1%20Physics/2%20Gravity/Problem_1/#centripetal-force","text":"The centripetal force acting on a body of mass \\(m\\) moving with velocity \\(v\\) in a circular orbit of radius \\(r\\) is: \\[ F_c = \\frac{m v^2}{r} \\]","title":"Centripetal Force"},{"location":"1%20Physics/2%20Gravity/Problem_1/#gravitational-force","text":"The gravitational force exerted by a central mass \\(M\\) (e.g., the Sun) on the orbiting body is given by Newton's Law of Gravitation: \\[ F_g = \\frac{G M m}{r^2} \\] where: - \\(G\\) is the universal gravitational constant, - \\(M\\) is the mass of the central body, - \\(m\\) is the mass of the orbiting body, - \\(r\\) is the orbital radius.","title":"Gravitational Force"},{"location":"1%20Physics/2%20Gravity/Problem_1/#2-equating-forces","text":"Since gravity provides the necessary centripetal force, we set \\(F_c = F_g\\) : \\[ \\frac{m v^2}{r} = \\frac{G M m}{r^2} \\] Canceling \\(m\\) from both sides: \\[ \\frac{v^2}{r} = \\frac{G M}{r^2} \\] Multiplying both sides by \\(r\\) : \\[ v^2 = \\frac{G M}{r} \\]","title":"2. Equating Forces"},{"location":"1%20Physics/2%20Gravity/Problem_1/#3-expressing-velocity-in-terms-of-orbital-period","text":"The orbital velocity \\(v\\) is related to the orbital period \\(T\\) by: \\[ v = \\frac{2\\pi r}{T} \\] Substituting this into the equation: \\[ \\left(\\frac{2\\pi r}{T}\\right)^2 = \\frac{G M}{r} \\] Expanding: \\[ \\frac{4\\pi^2 r^2}{T^2} = \\frac{G M}{r} \\] Multiplying both sides by \\(r\\) : \\[ 4\\pi^2 r^3 = G M T^2 \\]","title":"3. Expressing Velocity in Terms of Orbital Period"},{"location":"1%20Physics/2%20Gravity/Problem_1/#4-final-form-of-keplers-third-law","text":"Rearranging for \\(T^2\\) : \\[ T^2 = \\frac{4\\pi^2}{G M} r^3 \\] This shows that the square of the orbital period \\(T\\) is directly proportional to the cube of the orbital radius \\(r\\) : \\[ T^2 \\propto r^3 \\]","title":"4. Final Form of Kepler's Third Law"},{"location":"1%20Physics/2%20Gravity/Problem_1/#this-is-keplers-third-law-which-describes-the-relationship-between-the-orbital-period-and-the-radius-for-objects-in-circular-orbits-around-a-massive-central-body","text":"","title":"This is Kepler's Third Law, which describes the relationship between the orbital period and the radius for objects in circular orbits around a massive central body."},{"location":"1%20Physics/2%20Gravity/Problem_1/#task-2-discussion-on-the-implications-of-keplers-third-law-for-astronomy","text":"Kepler's Third Law, which relates the square of a planet's orbital period ( \\(T\\) ) to the cube of its orbital radius ( \\(r\\) ), has significant implications in the field of astronomy. This law helps astronomers determine various aspects of planetary systems, such as the masses of planets and the distances between celestial objects.","title":"Task 2 : Discussion on the Implications of Kepler's Third Law for Astronomy"},{"location":"1%20Physics/2%20Gravity/Problem_1/#1-calculating-planetary-masses","text":"Kepler's Third Law can be modified to help calculate the mass of a central body, such as a planet or star, based on the orbital characteristics of its satellite or orbiting object. The modified version of Kepler's Third Law is: \\[ T^2 = \\frac{4 \\pi^2 r^3}{G M} \\] Where: - \\(T\\) is the orbital period, - \\(r\\) is the orbital radius, - \\(G\\) is the gravitational constant, and - \\(M\\) is the mass of the central body. From this equation, the mass of the central body ( \\(M\\) ) can be calculated as: \\[ M = \\frac{4 \\pi^2 r^3}{G T^2} \\] Thus, by knowing the orbital period and radius of an orbiting body (e.g., a moon or satellite), astronomers can calculate the mass of the planet or star it orbits.","title":"1. Calculating Planetary Masses"},{"location":"1%20Physics/2%20Gravity/Problem_1/#2-determining-distances-in-space","text":"Kepler\u2019s Third Law also plays a crucial role in determining the distances between celestial bodies. By rearranging the law, astronomers can find the orbital radius of a planet, given the period of its orbit and the mass of the central body: \\[ r^3 = \\frac{G M T^2}{4 \\pi^2} \\] Knowing the orbital period ( \\(T\\) ) and the mass of the central body ( \\(M\\) ), the orbital radius ( \\(r\\) ) can be determined. This is particularly useful for calculating the distances between planets and their stars, or between moons and their planets.","title":"2. Determining Distances in Space"},{"location":"1%20Physics/2%20Gravity/Problem_1/#task-3-real-world-examples-of-keplers-third-law-the-moon-and-planetary-orbits","text":"Kepler's Third Law, which describes the relationship between the orbital period and the orbital radius of a body, has real-world applications in understanding the motion of celestial bodies such as the Moon and the planets in the Solar System.","title":"Task 3 : Real-World Examples of Kepler's Third Law: The Moon and Planetary Orbits"},{"location":"1%20Physics/2%20Gravity/Problem_1/#1-the-moons-orbit-around-earth","text":"The Moon orbits the Earth in an almost circular path, and its motion can be described using Kepler\u2019s Third Law. The orbital period of the Moon is approximately 27.3 days, and its average orbital radius is about 384,400 km. Using Kepler's Third Law, we can calculate the mass of the Earth based on the Moon's orbital period and radius. We know the gravitational constant ( \\(G\\) ) and the orbital period ( \\(T\\) ) of the Moon, so we can use the following formula: \\[ M = \\frac{4 \\pi^2 r^3}{G T^2} \\] Where: - \\(r\\) = 384,400 km (orbital radius of the Moon), - \\(T\\) = 27.3 days = 2,358,720 seconds (orbital period of the Moon), - \\(G\\) = \\(6.67430 \\times 10^{-11}\\) m \\(^3\\) kg \\(^{-1}\\) s \\(^{-2}\\) (gravitational constant). Plugging these values into the formula, we get the mass of the Earth. This calculation illustrates how Kepler's Third Law is used to determine the masses of celestial bodies.","title":"1. The Moon's Orbit Around Earth"},{"location":"1%20Physics/2%20Gravity/Problem_1/#2-the-orbits-of-planets-in-the-solar-system","text":"Kepler's Third Law is also fundamental in understanding the orbits of planets around the Sun. For example, the orbital period of Earth is about 365.25 days, and the average distance from Earth to the Sun is about 149.6 million kilometers (1 AU). Using Kepler\u2019s Third Law, we can compare the orbital characteristics of different planets in the Solar System. For example, the orbital period of Jupiter is 11.86 Earth years, and its average distance from the Sun is about 778.3 million kilometers. If we use Kepler\u2019s Third Law to compare the orbital periods and radii of Earth and Jupiter, we can predict the orbital behavior of these planets based on their distances from the Sun. The formula for Kepler\u2019s Third Law in this case is: \\[ \\frac{T_1^2}{r_1^3} = \\frac{T_2^2}{r_2^3} \\] Where: - \\(T_1\\) and \\(r_1\\) are the orbital period and radius of Earth, - \\(T_2\\) and \\(r_2\\) are the orbital period and radius of Jupiter. By substituting the known values for Earth and Jupiter, we can verify that Kepler's Third Law holds true across the Solar System and makes it possible to compare the motion of planets.","title":"2. The Orbits of Planets in the Solar System"},{"location":"1%20Physics/2%20Gravity/Problem_1/#task-4-implementing-a-computational-model-to-simulate-circular-orbits","text":"In this task, we will implement a computational model to simulate circular orbits and verify the relationship between the orbital period and the orbital radius, as described by Kepler's Third Law. We will write a Python script to simulate the motion of a satellite orbiting a central body and calculate its orbital period based on its radius.","title":"Task 4 : Implementing a Computational Model to Simulate Circular Orbits"},{"location":"1%20Physics/2%20Gravity/Problem_1/#1-keplers-third-law-and-circular-orbits","text":"Kepler's Third Law states that: \\[ T^2 = \\frac{4 \\pi^2 r^3}{G M} \\] Where: - \\(T\\) is the orbital period, - \\(r\\) is the orbital radius, - \\(G\\) is the gravitational constant, and - \\(M\\) is the mass of the central body. For circular orbits, we will simulate the motion of a satellite and calculate the orbital period for various orbital radii, using the above law. We can then compare the computed periods to the theoretical values to verify the relationship.","title":"1. Kepler's Third Law and Circular Orbits"},{"location":"1%20Physics/2%20Gravity/Problem_1/#2-python-script-to-simulate-circular-orbits","text":"Below is a Python script that simulates circular orbits for different orbital radii and calculates the orbital period based on Kepler's Third Law. ```python import numpy as np import matplotlib.pyplot as plt","title":"2. Python Script to Simulate Circular Orbits"},{"location":"1%20Physics/2%20Gravity/Problem_1/#constants","text":"G = 6.67430e-11 # Gravitational constant (m^3 kg^-1 s^-2) M = 5.972e24 # Mass of Earth (kg) pi = np.pi","title":"Constants"},{"location":"1%20Physics/2%20Gravity/Problem_1/#function-to-calculate-orbital-period-using-keplers-third-law","text":"def orbital_period(r): T = 2 * pi * np.sqrt(r**3 / (G * M)) # Orbital period (seconds) return T","title":"Function to calculate orbital period using Kepler's Third Law"},{"location":"1%20Physics/2%20Gravity/Problem_1/#range-of-orbital-radii-in-meters","text":"radii = np.linspace(1e6, 1e8, 100) # From 1,000 km to 100,000 km","title":"Range of orbital radii (in meters)"},{"location":"1%20Physics/2%20Gravity/Problem_1/#calculate-the-orbital-periods-for-each-radius","text":"periods = orbital_period(radii)","title":"Calculate the orbital periods for each radius"},{"location":"1%20Physics/2%20Gravity/Problem_1/#convert-orbital-period-from-seconds-to-days","text":"periods_days = periods / (60 * 60 * 24)","title":"Convert orbital period from seconds to days"},{"location":"1%20Physics/2%20Gravity/Problem_1/#plot-the-relationship-between-orbital-period-and-orbital-radius","text":"plt.figure(figsize=(8, 6)) plt.plot(radii, periods_days, label='Orbital Period', color='b') plt.xlabel('Orbital Radius (m)') plt.ylabel('Orbital Period (days)') plt.title('Orbital Period vs Orbital Radius') plt.grid(True) plt.legend() plt.show()","title":"Plot the relationship between orbital period and orbital radius"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}